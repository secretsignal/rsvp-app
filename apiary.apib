FORMAT: 1A
HOST: http://mysterybash.apiblueprint.org/

# MysteryBash API spec

API should provide access to Event Resources

## Data Structures
### RSVP (object)
- id: 7 (number)
- details (object)
    - first_name: Jane (string)
    - last_name: Smith (string)
    - email: `smiths@example.com` (string)
    - meal_preference: vegetarian (string)

### EventCollection (object)
- id: 42 (number)
- name: ComicCON (string)
- subdomain: comiccon (string)
- dateStart: "1/1/2017" (string)
- dateEnd: "" (string)

    
### Event (object)
- id: 42 (number)
- name: ComicCON (string)
- subdomain: comiccon (string)
- rsvps (array)
    - (object)
        - first_name: Chris (string)
        - last_name: Martin (string)
        - email: `margin@example.com` (string)
        - meal_preference: vegan (string)
    - (object)
        - first_name: Jonny (string)
        - last_name: Buckland (string)
        - email: `buckland@example.com` (string)
        - meal_preference: vegitarian (string)
    - (object)
        - first_name: Guy (string)
        - last_name: Berryman (string)
        - email: `berryman@example.com` (string)
        - meal_preference: vegitarian (string)
    - (object)
        - first_name: Will (string)
        - last_name: Champion (string)
        - email: `champion@example.com` (string)
        - meal_preference: vegitarian (string)
    - (object)
        - first_name: Tom (string)
        - last_name: Yorke (string)
        - email: `yorke@example.com` (string)
        - meal_preference: vegan (string)
    - (object)
        - first_name: Colin (string)
        - last_name: Greenwood (string)
        - email: `greenwood@example.com` (string)
        - meal_preference: vegitarian (string)
    - (object)
        - first_name: Jonny (string)
        - last_name: Greenwood (string)
        - email: `j.greenwood@example.com` (string)
        - meal_preference: vegitarian (string)
    - (object)
        - first_name: Ed (string)
        - last_name: `O'Brien` (string)
        - email: `obrien@example.com` (string)
        - meal_preference: vegitarian (string)
    - (object)
        - first_name: Phillip (string)
        - last_name: Selway (string)
        - email: `selway@example.com` (string)
        - meal_preference: vegitarian (string)

- rsvp_questions (array)
    - (object)
        - id: firstName (string)
        - type: text (string)
        - required: true (boolean)
        - label: First Name (string)
    - (object)
        - id: LastName (string)
        - type: text (string)
        - required: true (boolean)
        - label: Last Name (string)
    - (object)
        - id: email (string)
        - type: email (string)
        - required: true (boolean)
        - label: Email Address (string)
    - (object)
        - id: mealPreference (string)
        - type: dropdown (string)
        - required: true (boolean)
        - label: Meal Preference (string)
        - options: chicken, beef, vegetarian (array)
- data (object)
    - title: ComicCon (string) 
    - description: Lorem ipsum dolor sit amet! (string)
    - location (object)
        - address1: 123 Main St (string),
        - address2 (string),
        - province: Anytown (string),
        - region:   AnyState (string),
        - zipcode:  00000 (string),
        - country:  USA (string)
    - contact (object)
        - email: `support@example` (string)
        - phone: `+1 (555) 555-5555` (string)
- widgets (object)
    - contact (object)
    - gallary (object)
    - map (object)
    - about (object)

### Admin(object)
+ id: `1` (number)
+ email:`admin@example` (string)
+ password: `secret` (string)
+ roles: admin (array)

### Bouncer(object)
+ id: 2 (number)
+ email:`bouncer@example` (string)
+ password: `secret` (string)
+ roles: bouncer (array)



# Group Events
- An Event shall have many RSVPs.
- An Event shall have one  EventPage
- An Event shall have one  GuestList

## Events Collection [/events]
### Return All Events [GET]
+ Response 200 (application/json)
    + Attributes (array[EventCollection])

### Create an Event [POST]
+ Response 201 (application/json)
    + Attributes (Event)

## Event Object [/events/{id}]
+ Parameters
    + id (integer)

### Return an Event [GET]
+ Response 200 (application/json)
    + Attributes (Event)
+ Response 404 (application/json)

### Delete an Event [DELETE]
+ Response 201

# Group RSVPs
An RSVP represents a confirmed person, or persons who will be attending an event.
This may have details requested by the Event such as "Will you be bringing a plus one?", "Chicken or Fish", etc.

## RSVPs Collection [/events/{id}/rvsps]

+ Parameters
    + id (integer) - Event ID

### Create a RSVP for an Event [POST]
+ Response 201 (application/json)
    + Attributes (RSVP)

### Retrieve All RSVPs attending an Event [GET]
+ Response 200 (application/json)
    + Attributes (array[RSVP])
    
## RSVP [/events/{event_id}/rsvps/{id}]

+ Parameters
    + event_id (number, required) - ID of the Event in question
        + Default `42`
    + id (number, required) - ID of RSVP in question

### Retrieve an RSVP [GET]
+ Response 200 (application/json)
    + Attributes (RSVP)
+ Response 403
+ Response 404

### Delete a RSVP [DELETE]
+ Response 201